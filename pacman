#include <stdio.h>
#include <stdlib.h>
#include <conio.h>
#define WIDTH 20
#define HEIGHT 15 int 
posX, posY; // 
Pacman's position int 
score = 0; int 
maze[HEIGHT][WIDT
H] = {
{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
{1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1},
{1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1},
{1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1},
{1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1},
{1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1},
{1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1},
{1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
{1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1},
{1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1},
{1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1},
{1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1},
{1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1},
{1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1},
{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}
}; void 
drawMaze() 
{
int i, j; for (i = 0; 
i < HEIGHT; i++) 
{ for (j = 0; j < 
WIDTH; j++) {
if (maze[i][j] == 
1) printf("#"); // 
Wall
else if (i == posY && j 
== posX) printf("P"); 
// Pacman else printf(" 
"); // Empty space or 
pellet
}
printf("\
n"); } }
void updateScore() 
{ score++;
printf("Score: 
%d\n", score);
}
int checkCollision(int x, int 
y) { if (maze[y][x] == 1) // 
Wall collision return 1;
else if (maze[y][x] == 0) {
maze[y][x] = 2; // Pacman 
eats the pellet
updateScore(); } return 0;
} void 
movePacman(char 
direction) { int newX 
= posX; int newY = 
posY; switch 
(direction) { case 'w':
newY--; break; case 
'a': newX--;
break;
case 's':
newY+
+;
break;
case 'd':
newX++; break; }
if 
(!checkCollision(new
X, newY)) { posX = 
newX; posY = newY;
}
}
int main() { posX = 1;
posY = 1; while (1) {
system("cls"); // Clear 
console screen
drawMaze();
if (kbhit()) {
char input = 
getch();
movePacman
(input);
}
}
return 0;
}
